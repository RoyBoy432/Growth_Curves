aes(shape = Evolution, color = Evolution), #I cut out the "shape = Evolution, " part of the aes so that all shapes would be the same shape
position = position_jitterdodge(jitter.width = 0.275, dodge.width = 0.3),
size = 5.5, stroke =2
) +
scale_shape_manual(values = c(15,0)) +#12 is a square with a vertical cross inside it
stat_summary(
aes(color = Evolution),
fun.data = "mean_se", fun.args = list(mult = (1)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.5, shape=95,
position = position_dodge(0.2)
) +
scale_color_manual(values = mycols) +
labs(x="\nAssay",y="Life expectancy (relative)\n") +
geom_hline(yintercept = 1, linetype=117, size = 1.25) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank()) +
#hline<-data.frame(xa=c("Non-restricted (NR)","Dietary restriction (DR)"),v=c(13,7))
#hline$xa<-factor(hline$xa, levels=c("Non-restricted (NR)","Dietary restriction (DR)"))
#myhline <- data.frame(xa=c("Non-restricted (NR)","Dietary restriction (DR)"),v = c(13,7))
myydf<-as.data.frame(mydf)
enaught <- ggplot(myydf, aes(x=Assay, y=e0))
enaught +
geom_errorbar(aes(ymax=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075),ymin=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075)), color=c("darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey"),lwd = 2.2,linetype=117) +
geom_jitter(aes(shape = Evolution, color = Evolution), #I cut out the "shape = Evolution, " part of the aes so that all shapes would be the same shape
position = position_jitterdodge(jitter.width = 0.4, dodge.width = 0.4),
size = 8, stroke = 2.3
) +
stat_summary(
aes(color = Evolution),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.8, shape=95,
position = position_dodge(0.4),
show.legend=FALSE
) +
scale_color_manual(values = c("black","black"), labels = c("NR-evolved","DR-evolved")) +
scale_shape_manual(values = c(15,0), labels = c("NR-evolved", "DR-evolved")) +#12 is a square with a vertical cross inside it
labs(x="\nAssay diet",y="Life expectancy (days)\n") +
scale_y_continuous(limits = c(0.95,23.05),breaks=c(5,10,15,20), expand = c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
erel + geom_jitter(
aes(shape = Evolution, color = Evolution), #I cut out the "shape = Evolution, " part of the aes so that all shapes would be the same shape
position = position_jitterdodge(jitter.width = 0.275, dodge.width = 0.3),
size = 5.5, stroke =2
) +
scale_shape_manual(values = c(15,0)) +#12 is a square with a vertical cross inside it
stat_summary(
aes(color = Evolution),
fun.data = "mean_se", fun.args = list(mult = (1)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.5, shape=95,
position = position_dodge(0.2)
) +
scale_color_manual(values = mycols) +
labs(x="\nAssay",y="Life expectancy (relative)\n") +
geom_hline(yintercept = 1, linetype=117, size = 1.25) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank()) +
#hline<-data.frame(xa=c("Non-restricted (NR)","Dietary restriction (DR)"),v=c(13,7))
#hline$xa<-factor(hline$xa, levels=c("Non-restricted (NR)","Dietary restriction (DR)"))
#myhline <- data.frame(xa=c("Non-restricted (NR)","Dietary restriction (DR)"),v = c(13,7))
myydf<-as.data.frame(mydf)
myydf<-as.data.frame(mydf)
enaught <- ggplot(myydf, aes(x=Assay, y=e0))
enaught +
geom_errorbar(aes(ymax=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075),ymin=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075)), color=c("darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey"),lwd = 2.2,linetype=117) +
geom_jitter(aes(shape = Evolution, color = Evolution), #I cut out the "shape = Evolution, " part of the aes so that all shapes would be the same shape
position = position_jitterdodge(jitter.width = 0.4, dodge.width = 0.4),
size = 8, stroke = 2.3
) +
stat_summary(
aes(color = Evolution),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.8, shape=95,
position = position_dodge(0.4),
show.legend=FALSE
) +
scale_color_manual(values = c("black","black"), labels = c("NR-evolved","DR-evolved")) +
scale_shape_manual(values = c(15,0), labels = c("NR-evolved", "DR-evolved")) +#12 is a square with a vertical cross inside it
labs(x="\nAssay diet",y="Life expectancy (days)\n") +
scale_y_continuous(limits = c(0.95,23.05),breaks=c(5,10,15,20), expand = c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
W <- ggplot(mydf, aes(x=Assay, y=W))
W +   geom_hline(yintercept = 1, linetype=117, size = 1.75, color = "darkgrey") + #(linetype=117 for dashed)
geom_jitter(
aes(shape = Evolution, color = Evolution), #I cut out the "shape = Evolution, " part of the aes so that all shapes would be the same shape
position = position_jitterdodge(jitter.width = 0.5, dodge.width = 0.4),
size = 8, stroke = 2.3
) +
scale_shape_manual(values = c(15,0)) +
stat_summary(
aes(color = Evolution),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.8, shape = 95,
position = position_dodge(0.4),
show.legend = FALSE) +
scale_color_manual(values = mycols) +
labs(x="\nAssay diet",y= ~ atop(paste("Reproductive fitness (",italic("W'"),")"),###this adds the text that I want
paste(scriptstyle(" ")))) +                           ###however, trying to paste \n messes everything up. Therefore, to gain space between the title and th axis line, I pasted another argument---this starts pn a new line, and, since it was blank, it just functions like \n in thise case
scale_y_continuous(limits = c(0.95,1.8175), expand = c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit (.3, "cm"), axis.ticks.x = element_blank())
######################
#ESM
myESM_pretty <- read.csv("C:\\Users\\rmoge\\Box Sync\\JTL_Lab\\Lab.Notebook\\20170903_DR_Evolution\\data\\cases.275_ESM.csv",header=T)
myESM_pretty_omit <- na.omit(myESM_pretty)
myESM_pretty$Diet <- factor(myESM_pretty$Diet, levels=c("NR","DR"))
myESM_pretty_omit$Diet <- factor(myESM_pretty_omit$Diet, levels=c("NR","DR"))
CFU <- ggplot(myESM_pretty_omit, aes(x=Diet, y=CFU))
CFU + geom_jitter(
aes(shape = Diet, color = Diet), #I cut out the "shape = Evolution, " part of the aes so that all shapes would be the same shape
position = position_jitterdodge(jitter.width = .9, dodge.width = .2),
size = 8, stroke = 2.3) +
scale_shape_manual(values = c(1,1)) +#12 is a square with a vertical cross inside it
stat_summary(
aes(color = Diet),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.5, shape=95,
position = position_dodge(0.2),
show.legend = FALSE
) +
scale_color_manual(values = mycols) +
labs(x="\nDiet",y="CFUs\n") +
#scale_y_continuous(limits = c(0,140), expand = c(0,0)) +
#geom_hline(yintercept = 1, linetype=117, size = 1.25) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.position = "none",legend.key=element_blank(),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line = element_line(colour = "black"), axis.line.x = element_blank(), axis.line.y = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit (.3, "cm"), axis.ticks.x = element_blank())
FC <- ggplot(myESM_pretty, aes(x=Diet, y=FC_count))
FC + geom_jitter(
aes(shape = Diet, color = Diet), #I cut out the "shape = Evolution, " part of the aes so that all shapes would be the same shape
position = position_jitterdodge(jitter.width = .9, dodge.width = .2),
size = 8, stroke = 2.3) +
scale_shape_manual(values = c(1,1)) +#12 is a square with a vertical cross inside it
stat_summary(
aes(color = Diet),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.5, shape=95,
position = position_dodge(0.2),
show.legend = FALSE
) +
scale_color_manual(values = mycols) +
labs(x="\nDiet",y="cells/mL\n") +
scale_y_continuous(trans="log10",limits = c(25000000,41000000), expand = c(0,0)) +
#geom_hline(yintercept = 1, linetype=117, size = 1.25) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.position = "none",legend.key=element_blank(),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line = element_line(colour = "black"), axis.line.x = element_blank(), axis.line.y = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit (.3, "cm"), axis.ticks.x = element_blank())
umax <- ggplot(myESM_pretty_omit, aes(x=Diet, y=umax))
umax + geom_jitter(
aes(shape = Diet, color = Diet), #I cut out the "shape = Evolution, " part of the aes so that all shapes would be the same shape
position = position_jitterdodge(jitter.width = .9, dodge.width = .2),
size = 8, stroke = 2.3) +
scale_shape_manual(values = c(1,1)) +#12 is a square with a vertical cross inside it
stat_summary(
aes(color = Diet),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.5, shape=95,
position = position_dodge(0.2),
show.legend = FALSE
) +
scale_color_manual(values = mycols) +
labs(x="\nDiet",y="umax (1/hr)\n") +
#geom_hline(yintercept = 1, linetype=117, size = 1.25) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.position = "none",legend.key=element_blank(),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line = element_line(colour = "black"), axis.line.x = element_blank(), axis.line.y = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit (.3, "cm"), axis.ticks.x = element_blank())
erel.summary
mydf<-read_csv("C:\\Users\\rmoge\\OneDrive - Indiana University\\Lab.Notebook\\20180515_lifespan.mutants\\data\\cases_lifespan.mutants_20210108.subset.csv")
mydf
mydf_raw<-read_csv("C:\\Users\\rmoge\\OneDrive - Indiana University\\Lab.Notebook\\20180515_lifespan.mutants\\data\\cases_lifespan.mutants_20210108.subset.csv")
mydf<-as.tibble(mydf_raw)
mydf<-as_tibble(mydf_raw)
mydf
mydf_raw<-read_csv("C:\\Users\\rmoge\\OneDrive - Indiana University\\Lab.Notebook\\20180515_lifespan.mutants\\data\\cases_lifespan.mutants_20210108.subset.csv")
mydf<-as_tibble(mydf_raw)
mydf$Selection<-factor(mydf$Selection, levels=c("No Long","Long"))
mydf$Strain<-factor(mydf$Strain, levels=c("2","4","5","9"))
#mydf$History<-factor(mydf$History, levels=c("Home","Away"))
mycols<-c("black","black")
myydf<-as.data.frame(mydf)
enaught <- ggplot(myydf, aes(x=Assay, y=e0))
enaught +
geom_errorbar(aes(ymax=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075),ymin=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075)), color=c("darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey"),lwd = 2.2,linetype=117) +
geom_jitter(aes(shape = Evolution, color = Evolution), #I cut out the "shape = Evolution, " part of the aes so that all shapes would be the same shape
position = position_jitterdodge(jitter.width = 0.4, dodge.width = 0.4),
size = 8, stroke = 2.3
) +
stat_summary(
aes(color = Evolution),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.8, shape=95,
position = position_dodge(0.4),
show.legend=FALSE
) +
scale_color_manual(values = c("black","black"), labels = c("NR-evolved","DR-evolved")) +
scale_shape_manual(values = c(15,0), labels = c("NR-evolved", "DR-evolved")) +#12 is a square with a vertical cross inside it
labs(x="\nAssay diet",y="Life expectancy (days)\n") +
scale_y_continuous(limits = c(0.95,23.05),breaks=c(5,10,15,20), expand = c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
enaught <- ggplot(myydf, aes(x=Strain, y=e0))
enaught +
geom_errorbar(aes(ymax=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075),ymin=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075)), color=c("darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey"),lwd = 2.2,linetype=117) +
geom_jitter(aes(shape = Selection, color = Selection),
position = position_jitterdodge(jitter.width = 0.4, dodge.width = 0.4),
size = 8, stroke = 2.3
) +
stat_summary(
aes(color = Selection),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.8, shape=95,
position = position_dodge(0.4),
show.legend=FALSE
) +
scale_color_manual(values = c("black","black"), labels = c("NR-evolved","DR-evolved")) +
scale_shape_manual(values = c(15,0), labels = c("NR-evolved", "DR-evolved")) +#12 is a square with a vertical cross inside it
labs(x="\nAssay diet",y="Life expectancy (days)\n") +
#scale_y_continuous(limits = c(0.95,23.05),breaks=c(5,10,15,20), expand = c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
enaught <- ggplot(myydf, aes(x=Strain, y=e0))
enaught +
geom_errorbar(aes(ymax=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075),ymin=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075)), color=c("darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey"),lwd = 2.2,linetype=117) +
geom_jitter(aes(shape = Selection, color = Selection),
position = position_jitterdodge(jitter.width = 0.4, dodge.width = 0.4),
size = 8, stroke = 2.3
) +
stat_summary(
aes(color = Selection),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.8, shape=95,
position = position_dodge(0.4),
show.legend=FALSE
) +
scale_color_manual(values = c("black","black"), labels = c("NR-evolved","DR-evolved")) +
scale_shape_manual(values = c(15,0), labels = c("NR-evolved", "DR-evolved")) +#12 is a square with a vertical cross inside it
labs(x="\nAssay diet",y="Life expectancy (days)\n") +
#scale_y_continuous(limits = c(0.95,23.05),breaks=c(5,10,15,20), expand = c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
enaught <- ggplot(myydf, aes(x=Strain, y=e0))
enaught +
#geom_errorbar(aes(ymax=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075),ymin=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075)), color=c("darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey"),lwd = 2.2,linetype=117) +
geom_jitter(aes(shape = Selection, color = Selection),
position = position_jitterdodge(jitter.width = 0.4, dodge.width = 0.4),
size = 8, stroke = 2.3
) +
stat_summary(
aes(color = Selection),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.8, shape=95,
position = position_dodge(0.4),
show.legend=FALSE
) +
scale_color_manual(values = c("black","black"), labels = c("NR-evolved","DR-evolved")) +
scale_shape_manual(values = c(15,0), labels = c("NR-evolved", "DR-evolved")) +#12 is a square with a vertical cross inside it
labs(x="\nAssay diet",y="Life expectancy (days)\n") +
#scale_y_continuous(limits = c(0.95,23.05),breaks=c(5,10,15,20), expand = c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
enaught <- ggplot(myydf, aes(x=Strain, y=e0))
enaught +
#geom_errorbar(aes(ymax=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075),ymin=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075)), color=c("darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey"),lwd = 2.2,linetype=117) +
geom_jitter(aes(shape = Selection, color = Selection),
position = position_jitterdodge(jitter.width = 0.4, dodge.width = 0.4),
size = 8, stroke = 2.3
) +
stat_summary(
aes(color = Selection),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.8, shape=95,
position = position_dodge(0.4),
show.legend=FALSE
) +
scale_color_manual(values = c("black","black"), labels = c("No Long","Long")) +
scale_shape_manual(values = c(15,0), labels = c("No Long", "Long")) +#12 is a square with a vertical cross inside it
labs(x="\nStrain number",y="Life expectancy (days)\n") +
#scale_y_continuous(limits = c(0.95,23.05),breaks=c(5,10,15,20), expand = c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
enaught <- ggplot(myydf, aes(x=Strain, y=e0))
enaught +
#geom_errorbar(aes(ymax=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075),ymin=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075)), color=c("darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey"),lwd = 2.2,linetype=117) +
geom_jitter(aes(shape = Selection, color = Selection),
position = position_jitterdodge(jitter.width = 0.4, dodge.width = 0.4),
size = 8, stroke = 2.3
) +
stat_summary(
aes(color = Selection),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.8, shape=95,
position = position_dodge(0.4),
show.legend=FALSE
) +
scale_color_manual(values = c("black","black"), labels = c("No Long","Long")) +
scale_shape_manual(values = c(15,0), labels = c("No Long", "Long")) +#12 is a square with a vertical cross inside it
labs(x="\nStrain number",y="Life expectancy (days)\n") +
scale_y_continuous(limits = c(0,12),breaks=c(0,4,8,12), expand = c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
enaught +
#geom_errorbar(aes(ymax=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075),ymin=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075)), color=c("darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey"),lwd = 2.2,linetype=117) +
geom_jitter(aes(shape = Selection, color = Selection),
position = position_jitterdodge(jitter.width = 0.4, dodge.width = 0.4),
size = 8, stroke = 2.3
) +
stat_summary(
aes(color = Selection),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.8, shape=95,
position = position_dodge(0.4),
show.legend=FALSE
) +
scale_color_manual(values = c("black","black"), labels = c("No Long","Long")) +
scale_shape_manual(values = c(15,0), labels = c("No Long", "Long")) +#12 is a square with a vertical cross inside it
labs(x="\nStrain number",y="Life expectancy (days)\n") +
scale_y_continuous(limits = c(0,12.5),breaks=c(0,4,8,12), expand = c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
enaught <- ggplot(myydf, aes(x=Strain, y=e0))
enaught +
#geom_errorbar(aes(ymax=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075),ymin=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075)), color=c("darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey"),lwd = 2.2,linetype=117) +
geom_jitter(aes(shape = Selection, color = Selection),
position = position_jitterdodge(jitter.width = 0.4, dodge.width = 0.9),
size = 8, stroke = 2.3
) +
stat_summary(
aes(color = Selection),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.8, shape=95,
position = position_dodge(0.9),
show.legend=FALSE
) +
scale_color_manual(values = c("black","black"), labels = c("No Long","Long")) +
scale_shape_manual(values = c(15,0), labels = c("No Long", "Long")) +#12 is a square with a vertical cross inside it
labs(x="\nStrain number",y="Life expectancy (days)\n") +
scale_y_continuous(limits = c(0,12.5),breaks=c(0,4,8,12), expand = c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
myydf<-as.data.frame(mydf)
enaught <- ggplot(myydf, aes(x=Strain, y=e0))
enaught <- ggplot(myydf, aes(x=Strain, y=e0))
enaught +
#geom_errorbar(aes(ymax=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075),ymin=c(14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,14.66143438,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075,8.384658075)), color=c("darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey","darkgrey"),lwd = 2.2,linetype=117) +
geom_jitter(aes(shape = Selection, color = Selection),
position = position_jitterdodge(jitter.width = 0.4, dodge.width = 0.7),
size = 8, stroke = 2.3
) +
stat_summary(
aes(color = Selection),
fun.data = "mean_se", fun.args = list(mult = (2)), #mean_sdl add +/- standard deviation; mult=1 means that it is SD*1 that is drawn.  Mean_se draws the standard error of the mean
geom = "pointrange", size = 1.8, shape=95,
position = position_dodge(0.7),
show.legend=FALSE
) +
scale_color_manual(values = c("black","black"), labels = c("No Long","Long")) +
scale_shape_manual(values = c(15,0), labels = c("No Long", "Long")) +#12 is a square with a vertical cross inside it
labs(x="\nStrain number",y="Life expectancy (days)\n") +
scale_y_continuous(limits = c(-0.1,12.5),breaks=c(0,4,8,12), expand = c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(),panel.border = element_rect(color = "black", fill = NA, size = 3.5), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),legend.key.size = unit(2, "lines"),axis.text=element_text(size=34),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x.bottom = element_blank(), axis.line.y.left = element_blank(), axis.ticks.y = element_line(color = "black", size = 3.5), axis.ticks.length = unit(.3, "cm"), axis.ticks.x = element_blank())
install.packages(c("backports", "BH", "brio", "cpp11", "DBI", "diffobj", "dplyr", "fansi", "ggplot2", "ggrepel", "hms", "htmltools", "quantreg", "Rcpp", "RcppArmadillo", "rlang", "sp", "tibble", "tinytex", "withr", "xfun"))
install.packages(c("backports", "BH", "brio", "cpp11", "DBI", "diffobj", "dplyr", "fansi", "ggplot2", "ggrepel", "hms", "htmltools", "quantreg", "Rcpp", "RcppArmadillo", "rlang", "sp", "tibble", "tinytex", "withr", "xfun"))
################################################################################
#                                                                              #
#	Lennon Lab Growth Curve Analysis (with Synergy MX Plate Reader)              #
#   Parameter Estimate Code                                                    #
#                                                                              #
################################################################################
#                                                                              #
#	Written by: M. Muscarella                                                    #
#   Partially based on growthcurve_code.R Written by: M. Larsen (2013/07/18)   #
#                                                                              #
#	Last update: 02/27/2016 by V. Kuo and M. Muscarella                          #
#                                                                              #
################################################################################
growth.modGomp <- function(input=" ", output.name=" ",
output.dir="../output/",
temp.dir="../temp/",
intercept.guess=0.1,delta = 0.05,
synergy=T, temp = T, smooth = T, skip = ""){
# Input = Raw txt output file from Synergy MX
# Intercept.guess = initial guess of non-grid parameter for y intercept
# delta = minimum change in OD required for analysis
# synergy=T --> the data comes from the synergy mx machine.
#   If false data should be deliminated in proper format
# temp = T -> is there temperature data include for QC purposes
# Load Code Dependencies
source("../bin/read.synergy.R")
source("../bin/curve_fit_fxs.R")
source("../bin/grid.mle2.R")
# Create Directory For Output and Temp
dir.create(output.dir, showWarnings = FALSE)
dir.create(temp.dir, showWarnings = FALSE)
# Data Input
if (synergy == T){
data.in <- read.synergy(input, skip = skip)
samples <- colnames(data.in[3:dim(data.in)[2]])
} else {
data.in <- read.csv(input, header=T)
samples <- colnames(data.in[2:dim(data.in)[2]])
}
if (temp == T){
temp.test <- lm(round(Temp, 2) ~ Time, data=data.in)
p <- round(anova(temp.test)$'Pr(>F)'[1], 3)
temp.min <- min(data.in$Temp)
temp.max <- max(data.in$Temp)
temp.diff <- temp.max - temp.min
if (temp.diff < 3) {} else {stop("Stop, check for temperature effects")}
} else {}
# Initialize Data Storage
results <- matrix(NA,nrow=length(samples),ncol=10)
colnames(results) <- c("Curve","b0","A","umax","L","z",
"umax.lw","umax.up","umax.lw.FI","umax.up.FI")
results <- as.data.frame(results)
# Temporary Directory
# outfile <- paste(temp.dir,output,".csv", sep="")
# Creat Output Directory
outfile <- paste(output.dir,output.name,".csv", sep="")
titles <- c("Curve","b0","A","umax","L","z", "umax.lw","umax.up",
"umax.lw.FI","umax.up.FI")
write.table(as.matrix(t(titles)), file=outfile, append=F, row.names=F,
col.names=F, sep=",", quote=FALSE)
for(i in 1:length(samples)){
# Print Operation Status
print(paste("Starting sample ", samples[i], sep = ""), quote=F)
# Extract Data
t <- data.in$Time
s <- data.in[,which(colnames(data.in) == samples[i])]
if (max(s) - min(s) < delta) {
plot(s ~ t, main=samples[i], ylab="ABS", xlab="Time", pch=19)
print(paste("Observed change in OD is not greater than ", delta,
" in sample ", samples[i], sep=""), quote=F)
next
} else {
realdata <- data.frame(t,s)
}
# Smoothing Function
if (smooth == T){
s.2 <- as.numeric(filter(s, rep(1/11,11), circular=F, sides=2))
s.2[1:5] <- s[1:5]
s.2[(length(s.2)-5):length(s.2)] <- s[(length(s)-5):length(s)]
s.max <- max(which(s.2 == max(s.2, na.rm=T)))
t.end <- round(t[s.max],0) + 1
t.trim <- t[which(t <= t.end)]
s.trim <- s.2[which(t <= t.end)]
tmpdata <- data.frame(t.trim, s.trim)
} else {
s.2 <- as.numeric(s)
s.2[1:5] <- s[1:5]
s.2[(length(s.2)-5):length(s.2)] <- s[(length(s)-5):length(s)]
s.max <- max(which(s.2 == max(s.2, na.rm=T)))
t.end <- round(t[s.max],0) + 1
t.trim <- t[which(t <= t.end)]
s.trim <- s.2[which(t <= t.end)]
tmpdata <- data.frame(t.trim, s.trim)
}
# Set Grid and Start Lists for Model
# Modified Gompertz, dat~dnorm(mean=m.gomp(time2,c(b0,A,umax,L)),sd=exp(z))
grids1<-list(A=c(1.04, 2.4, 1.72),umax=c(0.005,0.006,0.008),L=c(-5,-0.5,0.1,5,10,20),z=c(-2,-0.5))
start1<-list(b0=intercept.guess,A=max(tmpdata[,2]),umax=NA,L=NA,z=NA)
# Perform grid.mle2 Fits
fit1<-grid.mle2(minuslogl=s.trim~dnorm(mean=m.gomp(t.trim,c(b0,A,umax,L)),
sd=exp(z)),grids=grids1,start=start1,data=tmpdata,
method="BFGS")
print("finished fit", quote=F)
# isolate best of each class of model
best.f1<-fit1$res.mod[[which(fit1$res.mat[,'AIC']==min(fit1$res.mat[,'AIC']))[1]]]
# generate plot of model fits
plot(s ~ t, main=samples[i], ylab="ABS", xlab="Time", pch=19, data=realdata)
curve(m.gomp(x,coef(best.f1)[1:4]),0,max(realdata$t),col='blue',lwd=2,add=T)
pdf(file=paste(temp.dir,"testplot",samples[i],".pdf",sep=""))
par(mar = c(6, 6, 4, 2))
plot(s ~ t, main=samples[i],
ylab=expression(paste("Absorbance"[600])),
xlab=expression(paste("Time (min)")),
pch=19, las = 1, cex.axis = 1, cex.lab = 1.5, data=realdata)
curve(m.gomp(x,coef(best.f1)[1:4]),0,max(tmpdata$t.trim),col='blue',lwd=2,add=T)
dev.off()
# attempt profiling
pf1<-profile(best.f1)
print("finished pf1", quote=F)
if(class(pf1)=="profile.mle2"){
ci1<-confint(pf1)['umax',]
} else {
ci1<-c(NA,NA)
names(ci1)<-c("2.5%","97.5%")
}
ciFI1<-confint.FI(best.f1)['umax',]
# Save coefficients of model
cfs<-coef(best.f1)
results$Curve[i] <- samples[i]
results$b0[i]<-round(cfs['b0'], 4)
results$A[i]<-round(cfs['A'], 4)
results$umax[i]<-round(cfs['umax'], 4)
results$L[i]<-round(cfs['L'], 4)
results$z[i]<-round(cfs['z'], 4)
results[i,c("umax.lw" , "umax.up" , "umax.lw.FI" , "umax.up.FI")] <- round(c(ci1,ciFI1), 4)
write.table(results[i,], file=outfile, append=T, row.names=F, col.names=F, sep=",", quote=FALSE)
# Print Operation Status
print(paste("umax for ", samples[i], " = ", results$umax[i], sep = ""), quote = F)
print(paste(round(((i)/(length(samples))*100),0),"% complete",
sep = ""), quote=F)
}
# results1<-results
# write.csv(results,"results.csv")
}
setwd("C:\\Users\\rmoge\\GitHub\\Growth_Curves\\data")
growth.modGomp(input="C:\\Users\\rmoge\\GitHub\\Growth_Curves\\data\\20210114_strain4_AP3col2-6_AP12col7-11.csv", output.dir = "C:\\Users\\rmoge\\GitHub\\Growth_Curves\\20210114_strain4_output\\",temp.dir = "C:\\Users\\rmoge\\GitHub\\Growth_Curves\\20210114_strain4_curves\\", output.name = "strain4", synergy = F, temp = F)
growth.modGomp(input="C:\\Users\\rmoge\\GitHub\\Growth_Curves\\data\\20210211_strain0_AP3col2-6_AP12col7-11.csv", output.dir = "C:\\Users\\rmoge\\GitHub\\Growth_Curves\\20210211_strain0_output\\",temp.dir = "C:\\Users\\rmoge\\GitHub\\Growth_Curves\\20210211_strain0_curves\\", output.name = "strain0", synergy = F, temp = F)
growth.modGomp(input="C:\\Users\\rmoge\\GitHub\\Growth_Curves\\data\\20210211_strain0_AP3col2-6_AP12col7-11.csv", output.dir = "C:\\Users\\rmoge\\GitHub\\Growth_Curves\\20210211_strain0_output\\",temp.dir = "C:\\Users\\rmoge\\GitHub\\Growth_Curves\\20210211_strain0_curves\\", output.name = "strain0", synergy = F, temp = F)
