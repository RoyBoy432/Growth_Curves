geom_hline(yintercept = (BANC), linetype=117,col='red', size = 1.25) +
scale_fill_manual(values = c("black","red"))
plot(mygg)
mygg<-ggplot(idff, aes(x=Strain,y=W_anc1.0)) +
geom_bar(aes(x=Strain, y=W_anc1.0),position=position_dodge(.1), inherit.aes = TRUE, stat= "identity", colour=tuffer, width = .5) +
geom_errorbar(aes(Strain, ymin = (W_anc1.0 - 1*W_anc1.0_SE), ymax = (W_anc1.0 + 1*W_anc1.0_SE)),position = position_dodge(1), width = .15, size = 1.5) +
labs(x="Strain", y="Relative fitness (W)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text=element_text(size=18),axis.title=element_text(size=30), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank(), axis.ticks.length = unit(0.2, "cm"), aspect.ratio = 2/1) +
scale_y_continuous(limits = c(0,1.506), expand = c(0,0)) +
geom_hline(yintercept = 1, linetype=117, size = 1.25) +
geom_hline(yintercept = (BANC), linetype=117,col='red', size = 1.25) +
scale_fill_manual(values = c("syn1.0"="black","syn3B"="red"))
plot(mygg)
mygg<-ggplot(idff, aes(x=Strain,y=W_anc1.0)) +
geom_bar(aes(x=Strain, y=W_anc1.0),position=position_dodge(.1), inherit.aes = TRUE, stat= "identity", colour=tuffer, width = .5) +
geom_errorbar(aes(Strain, ymin = (W_anc1.0 - 1*W_anc1.0_SE), ymax = (W_anc1.0 + 1*W_anc1.0_SE)),position = position_dodge(1), width = .15, size = 1.5) +
labs(x="Strain", y="Relative fitness (W)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text=element_text(size=18),axis.title=element_text(size=30), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank(), axis.ticks.length = unit(0.2, "cm"), aspect.ratio = 2/1) +
scale_y_continuous(limits = c(0,1.506), expand = c(0,0)) +
geom_hline(yintercept = 1, linetype=117, size = 1.25) +
geom_hline(yintercept = (BANC), linetype=117,col='red', size = 1.25) +
scale_fill_manual("legend",values = c("syn1.0"="black","syn3B"="red"))
plot(mygg)
idff
mygg<-ggplot(idff, aes(x=Strain,y=W_anc1.0,fill=Strain)) +
geom_bar(aes(x=Strain, y=W_anc1.0),position=position_dodge(.1), inherit.aes = TRUE, stat= "identity", colour=tuffer, width = .5) +
geom_errorbar(aes(Strain, ymin = (W_anc1.0 - 1*W_anc1.0_SE), ymax = (W_anc1.0 + 1*W_anc1.0_SE)),position = position_dodge(1), width = .15, size = 1.5) +
labs(x="Strain", y="Relative fitness (W)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text=element_text(size=18),axis.title=element_text(size=30), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank(), axis.ticks.length = unit(0.2, "cm"), aspect.ratio = 2/1) +
scale_y_continuous(limits = c(0,1.506), expand = c(0,0)) +
geom_hline(yintercept = 1, linetype=117, size = 1.25) +
geom_hline(yintercept = (BANC), linetype=117,col='red', size = 1.25) +
scale_fill_manual("legend",values = c("syn1.0"="black","syn3B"="red"))
plot(mygg)
mygg<-ggplot(idff, aes(x=Strain,y=W_anc1.0,fill=Strain)) +
geom_bar(aes(x=Strain, y=W_anc1.0),position=position_dodge(.1), inherit.aes = TRUE, stat= "identity", colour=tuffer, width = .5) +
geom_errorbar(aes(Strain, ymin = (W_anc1.0 - 1*W_anc1.0_SE), ymax = (W_anc1.0 + 1*W_anc1.0_SE)),position = position_dodge(1), width = .15, size = 1.5) +
labs(x="Strain", y="Relative fitness (W)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text=element_text(size=18),axis.title=element_text(size=30), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank(), axis.ticks.length = unit(0.2, "cm"), aspect.ratio = 2/1) +
scale_y_continuous(limits = c(0,1.506), expand = c(0,0)) +
geom_hline(yintercept = 1, linetype=117, size = 1.25) +
geom_hline(yintercept = (BANC), linetype=117,col='red', size = 1.25) +
scale_fill_manual("",values = c("syn1.0"="black","syn3B"="red"))
plot(mygg)
mygg<-ggplot(idff, aes(x=Strain,y=W_anc1.0,fill=Strain)) +
geom_bar(aes(x=Strain, y=W_anc1.0),position=position_dodge(.1), inherit.aes = TRUE, stat= "identity", colour=tuffer, width = .5) +
geom_errorbar(aes(Strain, ymin = (W_anc1.0 - 1*W_anc1.0_SE), ymax = (W_anc1.0 + 1*W_anc1.0_SE)),position = position_dodge(1), width = .15, size = 1.5) +
labs(x="Strain", y="Relative fitness (W)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text=element_text(size=18),axis.title=element_text(size=30), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank(), axis.ticks.length = unit(0.2, "cm"), aspect.ratio = 2/1) +
scale_y_continuous(limits = c(0,1.506), expand = c(0,0)) +
geom_hline(yintercept = 1, linetype=117, size = 1.25) +
geom_hline(yintercept = (BANC), linetype=117,col='red', size = 1.25) +
scale_fill_manual("",values = c("syn1.0"=" dark grey","syn3B"="dark red"))
plot(mygg)
BANC<-idff$W_anc1.0[2] / idff$W_anc.own[2]
mygg<-ggplot(idff, aes(x=Strain,y=W_anc1.0,fill=Strain)) +
geom_bar(aes(x=Strain, y=W_anc1.0),position=position_dodge(.1), inherit.aes = TRUE, stat= "identity", colour=black, width = .5) +
geom_errorbar(aes(Strain, ymin = (W_anc1.0 - 1*W_anc1.0_SE), ymax = (W_anc1.0 + 1*W_anc1.0_SE)),position = position_dodge(1), width = .15, size = 1.5) +
labs(x="Strain", y="Relative fitness (W)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text=element_text(size=18),axis.title=element_text(size=30), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank(), axis.ticks.length = unit(0.2, "cm"), aspect.ratio = 2/1) +
scale_y_continuous(limits = c(0,1.506), expand = c(0,0)) +
geom_hline(yintercept = 1, linetype=117, size = 1.25) +
geom_hline(yintercept = (BANC), linetype=117,col='red', size = 1.25) +
scale_fill_manual("",values = c("syn1.0"=" dark grey","syn3B"="dark red"))
plot(mygg)
mygg<-ggplot(idff, aes(x=Strain,y=W_anc1.0,fill=Strain)) +
geom_bar(aes(x=Strain, y=W_anc1.0),position=position_dodge(.1), inherit.aes = TRUE, stat= "identity", colour="black", width = .5) +
geom_errorbar(aes(Strain, ymin = (W_anc1.0 - 1*W_anc1.0_SE), ymax = (W_anc1.0 + 1*W_anc1.0_SE)),position = position_dodge(1), width = .15, size = 1.5) +
labs(x="Strain", y="Relative fitness (W)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text=element_text(size=18),axis.title=element_text(size=30), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank(), axis.ticks.length = unit(0.2, "cm"), aspect.ratio = 2/1) +
scale_y_continuous(limits = c(0,1.506), expand = c(0,0)) +
geom_hline(yintercept = 1, linetype=117, size = 1.25) +
geom_hline(yintercept = (BANC), linetype=117,col='red', size = 1.25) +
scale_fill_manual("",values = c("syn1.0"=" dark grey","syn3B"="dark red"))
plot(mygg)
mygg<-ggplot(idff, aes(x=Strain,y=W_anc1.0,fill=Strain)) +
geom_bar(aes(x=Strain, y=W_anc1.0),position=position_dodge(.1), inherit.aes = TRUE, stat= "identity", colour="black", width = .5) +
geom_errorbar(aes(Strain, ymin = (W_anc1.0 - 1*W_anc1.0_SE), ymax = (W_anc1.0 + 1*W_anc1.0_SE)),position = position_dodge(1), width = .15, size = 1.5) +
labs(x="Strain", y="Relative fitness (W)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text=element_text(size=18),axis.title=element_text(size=30), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank(), axis.ticks.length = unit(0.2, "cm"), aspect.ratio = 2/1) +
scale_y_continuous(limits = c(0,1.506), expand = c(0,0)) +
geom_hline(yintercept = 1, linetype=117, size = 1.25) +
geom_hline(yintercept = (BANC), linetype=117,col='red', size = 1.25) +
scale_fill_manual("",values = c("syn1.0"=" dark grey","syn3B"="salmon"))
plot(mygg)
mygg<-ggplot(idff, aes(x=Strain,y=W_anc1.0,fill=Strain)) +
geom_bar(aes(x=Strain, y=W_anc1.0),position=position_dodge(.1), inherit.aes = TRUE, stat= "identity", colour="black", width = .5) +
geom_errorbar(aes(Strain, ymin = (W_anc1.0 - 1*W_anc1.0_SE), ymax = (W_anc1.0 + 1*W_anc1.0_SE)),position = position_dodge(1), width = .15, size = 1.5) +
labs(x="Strain", y="Relative fitness (W)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text=element_text(size=18),axis.title=element_text(size=30), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank(), axis.ticks.length = unit(0.2, "cm"), aspect.ratio = 2/1) +
scale_y_continuous(limits = c(0,1.506), expand = c(0,0)) +
geom_hline(yintercept = 1, linetype=117, size = 1.25) +
geom_hline(yintercept = (BANC), linetype=117,col='red', size = 1.25) +
scale_fill_manual("",size=100,values = c("syn1.0"=" dark grey","syn3B"="salmon"))
plot(mygg)
mygg<-ggplot(idff, aes(x=Strain,y=W_anc1.0,fill=Strain)) +
geom_bar(aes(x=Strain, y=W_anc1.0),position=position_dodge(.1), inherit.aes = TRUE, stat= "identity", colour="black", width = .5) +
geom_errorbar(aes(Strain, ymin = (W_anc1.0 - 1*W_anc1.0_SE), ymax = (W_anc1.0 + 1*W_anc1.0_SE)),position = position_dodge(1), width = .15, size = 1.5) +
labs(x="Strain", y="Relative fitness (W)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"), axis.text=element_text(size=22),axis.title=element_text(size=34), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank(), axis.ticks.length = unit(0.2, "cm"), aspect.ratio = 2/1) +
scale_y_continuous(limits = c(0,1.506), expand = c(0,0)) +
geom_hline(yintercept = 1, linetype=117, size = 1.25) +
geom_hline(yintercept = (BANC), linetype=117,col='red', size = 1.25) +
scale_fill_manual("",values = c("syn1.0"=" dark grey","syn3B"="salmon"))
plot(mygg)
V<-var.test(my1$W_anc1.0,myB$W_anc1.0)
V
absoluteW<-t.test(my1$W_anc1.0,myb$W_anc1.0,alternative='two.sided',paired=F,var.equal=T,mu=0)
absoluteW<-t.test(my1$W_anc1.0,myB$W_anc1.0,alternative='two.sided',paired=F,var.equal=T,mu=0)
absoluteW
vi<-var.test(my1$W_anc.own,myB$W_anc.own)
vi
increaseW<-t.test(my1$W_anc.own,myB$W_anc.own,alternative='two.sided',paired=F,var.equal=T,mu=0)
print(increaseW)
my1
increaseWvsown<-t.test(my1$W_anc.own,myB$W_anc.own,alternative='two.sided',paired=F,var.equal=T,mu=0)
print(increaseWvsown)
vabs<-var.test(my1$W_anc1.0,myB$W_anc1.0)
vabs
V<-var.test(my1$W_anc1.0,myB$W_anc1.0)
V
absoluteW<-t.test(my1$W_anc1.0,myB$W_anc1.0,alternative='two.sided',paired=F,var.equal=T,mu=0)
absoluteW
tuffer<-c("black","red")
library(ggplot2);library(tidyverse)
idff<-read_csv("C:\\Users\\rmoge\\Box Sync\\Mycoplasma\\Experiments\\data\\mean.SE_Mm.300.csv")
BANC<-idff$W_anc1.0[2] / idff$W_anc.own[2]
BANC
vi<-var.test(my1$W_anc.own,myB$W_anc.own)
vi
increaseWvsown<-t.test(my1$W_anc.own,myB$W_anc.own,alternative='two.sided',paired=F,var.equal=T,mu=(1-BANC))
print(increaseWvsown)
increaseWvsown<-t.test(my1$W_anc.own,myB$W_anc.own,alternative='two.sided',paired=F,var.equal=T,mu=(-1+BANC))
print(increaseWvsown)
library(tidyverse)
myt <- read.csv("C:\\Users\\rmoge\\Box Sync\\JTL_Lab\\Lab.Notebook\\20170903_DR_Evolution\\data\\cases.275.csv",header=T)
#myt <- read.csv("C:\\Users\\rmoge\\Box Sync\\JTL_Lab\\Lab.Notebook\\20170903_DR_Evolution\\data\\cases.275_relative.to.VMA1.csv",header=T)
#
myd<-as_tibble(myt)
attach(myd)
W2way<-aov(myd$W ~ myd$Evolution + myd$Assay + myd$Evolution*myd$Assay)
summary(W2way)
TukeyHSD((W2way))
plot(TukeyHSD(W2way))
#myt <- read.csv("C:\\Users\\rmoge\\Box Sync\\JTL_Lab\\Lab.Notebook\\20170903_DR_Evolution\\data\\cases.275.csv",header=T)
myt <- read.csv("C:\\Users\\rmoge\\Box Sync\\JTL_Lab\\Lab.Notebook\\20170903_DR_Evolution\\data\\cases.275_relative.to.VMA1.csv",header=T)
#
myd<-as_tibble(myt)
attach(myd)
W2way<-aov(myd$W ~ myd$Evolution + myd$Assay + myd$Evolution*myd$Assay)
summary(W2way)
TukeyHSD((W2way))
plot(TukeyHSD(W2way))
mydf<-read_csv("C:\\Users\\rmoge\\Box Sync\\JTL_Lab\\Lab.Notebook\\20170903_DR_Evolution\\data\\mean.SE_275_relative.to.VMA1.csv")
#mye0df<-mydf
mydf$Evolution<-factor(mydf$Evolution, levels=c("Standard-evolved","DR-evolved"))
mydf$Assay<-factor(mydf$Assay, levels=c("Assayed on standard-calorie","Assayed on DR"))
mydf$History<-factor(mydf$History, levels=c("Focal","Alternate"))
mycols<-c("grey48","grey88")
rm(list = ls())
library(ggplot2);library(tidyverse)
mydf<-read_csv("C:\\Users\\rmoge\\Box Sync\\JTL_Lab\\Lab.Notebook\\20170903_DR_Evolution\\data\\mean.SE_275_relative.to.VMA1.csv")
#mye0df<-mydf
mydf$Evolution<-factor(mydf$Evolution, levels=c("Standard-evolved","DR-evolved"))
mydf$Assay<-factor(mydf$Assay, levels=c("Assayed on standard-calorie","Assayed on DR"))
mydf$History<-factor(mydf$History, levels=c("Focal","Alternate"))
rm(list = ls())
library(ggplot2);library(tidyverse)
mydf<-read_csv("C:\\Users\\rmoge\\Box Sync\\JTL_Lab\\Lab.Notebook\\20170903_DR_Evolution\\data\\mean.SE_275_relative.to.VMA1.csv")
#mye0df<-mydf
mydf$Evolution<-factor(mydf$Evolution, levels=c("Standard-evolved","DR-evolved"))
mydf$Assay<-factor(mydf$Assay, levels=c("Assayed on standard-calorie","Assayed on DR"))
mydf$History<-factor(mydf$History, levels=c("Focal","Alternate"))
rm(list = ls())
library(ggplot2);library(tidyverse)
mydf<-read_csv("C:\\Users\\rmoge\\Box Sync\\JTL_Lab\\Lab.Notebook\\20170903_DR_Evolution\\data\\mean.SE_275_relative.to.VMA1.csv")
#mye0df<-mydf
mydf$Evolution<-factor(mydf$Evolution, levels=c("Standard-evolved","DR-evolved"))
mydf$Assay<-factor(mydf$Assay, levels=c("Assayed on standard-calorie","Assayed on DR"))
mydf$History<-factor(mydf$History, levels=c("Focal","Alternate"))
mycols<-c("grey48","grey88")
myW<-ggplot(mydf, aes(x=History, y=W, ymin=(W-1*W_SE), ymax=(W+1*W_SE),fill = Evolution)) +#!!!!!!!!!!!!!!!!!!!!!
geom_bar(position=position_dodge(), stat = "identity", colour="black", width = 0.5) +
geom_errorbar(aes(ymin=W - W_SE, ymax = W + W_SE), width = .15, size = 1.5, position = position_dodge(0.5)) +
scale_fill_manual(values=mycols) +
scale_y_continuous(limits = c(0,3.075), expand = c(0,0)) +
labs(x="Assay environment",y="Relative reproductive fitness") +#!!!!!!!!!!!!!!!!!!!!!!!! (± 1 SE)
geom_hline(yintercept = 1, linetype=117, size = 1.25) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.key=element_blank(),axis.text=element_text(size=34),axis.title.x=element_text(size=36, colour = "black"), axis.title.y=element_text(size=36, colour = "black") , legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank(), axis.ticks.length = unit(0.2, "cm"))
plot(myW)
mydf<-read_csv("C:\\Users\\rmoge\\Box Sync\\JTL_Lab\\Lab.Notebook\\20170903_DR_Evolution\\data\\mean.SE_275.csv")
#mye0df<-mydf
mydf$Evolution<-factor(mydf$Evolution, levels=c("Standard-evolved","DR-evolved"))
mydf$Assay<-factor(mydf$Assay, levels=c("Assayed on standard-calorie","Assayed on DR"))
mydf$History<-factor(mydf$History, levels=c("Focal","Alternate"))
mycols<-c("grey48","grey88")
mygg<-ggplot(mydf, aes(x=Assay, y=W, ymin=(W-1*W_SE), ymax=(W+1*W_SE),fill = Evolution)) +#!!!!!!!!!!!!!!!!!!!!!
geom_bar(position=position_dodge(), stat = "identity", colour="black", width = 0.5) +
geom_errorbar(aes(ymin=W - W_SE, ymax = W + W_SE), width = .15, size = 1.5, position = position_dodge(0.5)) +
scale_fill_manual(values=mycols) +
scale_y_continuous(limits = c(0,3.075), expand = c(0,0)) +
labs(x="Assay",y="Relative reproductive fitness (W')") +#!!!!!!!!!!!!!!!!!!!!!!!! (± 1 SE)
geom_hline(yintercept = 1, linetype=117, size = 1.25) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.key=element_blank(),axis.text=element_text(size=34),axis.title.x=element_text(size=36, colour = "black"), axis.title.y=element_text(size=36, colour = "black") , legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank(), axis.ticks.length = unit(0.2, "cm"))
plot(mygg)
library(tidyverse)
rm(list = ls())
myt <- read.csv("C:\\Users\\rmoge\\Box Sync\\JTL_Lab\\Lab.Notebook\\20170903_DR_Evolution\\data\\cases.275.csv",header=T)
myd<-as_tibble(myt)
attach(myd)
W2way<-aov(myd$W ~ myd$Evolution + myd$Assay + myd$Evolution*myd$Assay)
summary(W2way)
TukeyHSD((W2way))
plot(TukeyHSD(W2way))
rm(list = ls())
library(ggplot2);library(tidyverse)
mydf<-read_csv("C:\\Users\\rmoge\\Box Sync\\JTL_Lab\\Lab.Notebook\\20170903_DR_Evolution\\data\\mean.SE_275.csv")
#mydf<-read_csv("C:\\Users\\rmoge\\Box Sync\\JTL_Lab\\Lab.Notebook\\20170903_DR_Evolution\\data\\mean.SE_275_relative.to.VMA1.csv")
#mye0df<-mydf
mydf$Evolution<-factor(mydf$Evolution, levels=c("Standard-evolved","DR-evolved"))
mydf$Assay<-factor(mydf$Assay, levels=c("Assayed on standard-calorie","Assayed on DR"))
mydf$History<-factor(mydf$History, levels=c("Focal","Alternate"))
mycols<-c("grey48","grey88")
mygg<-ggplot(mydf, aes(x=Assay, y=W, ymin=(W-1*W_SE), ymax=(W+1*W_SE),fill = Evolution)) +#!!!!!!!!!!!!!!!!!!!!!
geom_bar(position=position_dodge(), stat = "identity", colour="black", width = 0.5) +
geom_errorbar(aes(ymin=W - W_SE, ymax = W + W_SE), width = .15, size = 1.5, position = position_dodge(0.5)) +
scale_fill_manual(values=mycols) +
scale_y_continuous(limits = c(0,3.075), expand = c(0,0)) +
labs(x="Assay",y="Relative reproductive fitness (W')") +#!!!!!!!!!!!!!!!!!!!!!!!! (± 1 SE)
geom_hline(yintercept = 1, linetype=117, size = 1.25) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.key=element_blank(),axis.text=element_text(size=34),axis.title.x=element_text(size=36, colour = "black"), axis.title.y=element_text(size=36, colour = "black") , legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank(), axis.ticks.length = unit(0.2, "cm"))
plot(mygg)
mygg<-ggplot(mydf, aes(x=Assay, y=W, ymin=(W-1*W_SE), ymax=(W+1*W_SE),fill = Evolution)) +#!!!!!!!!!!!!!!!!!!!!!
geom_bar(position=position_dodge(), stat = "identity", colour="black", width = 0.5) +
geom_errorbar(aes(ymin=W - W_SE, ymax = W + W_SE), width = .15, size = 1.5, position = position_dodge(0.5)) +
scale_fill_manual(values=mycols) +
scale_y_continuous(limits = c(1,3.075), expand = c(0,0)) +
labs(x="Assay",y="Relative reproductive fitness (W')") +#!!!!!!!!!!!!!!!!!!!!!!!! (± 1 SE)
geom_hline(yintercept = 1, linetype=117, size = 1.25) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.key=element_blank(),axis.text=element_text(size=34),axis.title.x=element_text(size=36, colour = "black"), axis.title.y=element_text(size=36, colour = "black") , legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank(), axis.ticks.length = unit(0.2, "cm"))
plot(mygg)
mygg<-ggplot(mydf, aes(x=Assay, y=W, ymin=(W-1*W_SE), ymax=(W+1*W_SE),fill = Evolution)) +#!!!!!!!!!!!!!!!!!!!!!
geom_bar(position=position_dodge(), stat = "identity", colour="black", width = 0.5) +
geom_errorbar(aes(ymin=W - W_SE, ymax = W + W_SE), width = .15, size = 1.5, position = position_dodge(0.5)) +
scale_fill_manual(values=mycols) +
scale_y_continuous(limits = c(1,3.075), expand = c(0,1)) +
labs(x="Assay",y="Relative reproductive fitness (W')") +#!!!!!!!!!!!!!!!!!!!!!!!! (± 1 SE)
geom_hline(yintercept = 1, linetype=117, size = 1.25) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.key=element_blank(),axis.text=element_text(size=34),axis.title.x=element_text(size=36, colour = "black"), axis.title.y=element_text(size=36, colour = "black") , legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank(), axis.ticks.length = unit(0.2, "cm"))
plot(mygg)
mygg<-ggplot(mydf, aes(x=Assay, y=W, ymin=(W-1*W_SE), ymax=(W+1*W_SE),fill = Evolution)) +#!!!!!!!!!!!!!!!!!!!!!
geom_bar(position=position_dodge(), stat = "identity", colour="black", width = 0.5) +
geom_errorbar(aes(ymin=W - W_SE, ymax = W + W_SE), width = .15, size = 1.5, position = position_dodge(0.5)) +
scale_fill_manual(values=mycols) +
scale_y_continuous(limits = c(1,3.075), expand = c(0,0)) +
labs(x="Assay",y="Relative reproductive fitness (W')") +#!!!!!!!!!!!!!!!!!!!!!!!! (± 1 SE)
geom_hline(yintercept = 1, linetype=117, size = 1.25) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.key=element_blank(),axis.text=element_text(size=34),axis.title.x=element_text(size=36, colour = "black"), axis.title.y=element_text(size=36, colour = "black") , legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank(), axis.ticks.length = unit(0.2, "cm"))
plot(mygg)
mygg<-ggplot(mydf, aes(x=Assay, y=W, ymin=(W-1*W_SE), ymax=(W+1*W_SE),fill = Evolution)) +#!!!!!!!!!!!!!!!!!!!!!
geom_bar(position=position_dodge(), stat = "identity", colour="black", width = 0.5) +
geom_errorbar(aes(ymin=W - W_SE, ymax = W + W_SE), width = .15, size = 1.5, position = position_dodge(0.5)) +
scale_fill_manual(values=mycols) +
scale_y_continuous(limits = c(0,3.075), expand = c(0,0)) +
labs(x="Assay",y="Relative reproductive fitness (W')") +#!!!!!!!!!!!!!!!!!!!!!!!! (± 1 SE)
geom_hline(yintercept = 1, linetype=117, size = 1.25) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.key=element_blank(),axis.text=element_text(size=34),axis.title.x=element_text(size=36, colour = "black"), axis.title.y=element_text(size=36, colour = "black") , legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank(), axis.ticks.length = unit(0.2, "cm"))
plot(mygg)
dataframes, each one having the appropriate "levels" assignment.
mye0df$Evolution<-factor(mydf$Evolution, levels=c("Standard-evolved","DR-evolved"))
mye0df$Assay<-factor(mydf$Assay, levels=c("Assayed on standard","Assayed on DR"))
rm(list = ls())
library(ggplot2);library(tidyverse)
mydf<-read_csv("C:\\Users\\rmoge\\Box Sync\\JTL_Lab\\Lab.Notebook\\20170903_DR_Evolution\\data\\mean.SE_275.csv")
#mydf<-read_csv("C:\\Users\\rmoge\\Box Sync\\JTL_Lab\\Lab.Notebook\\20170903_DR_Evolution\\data\\mean.SE_275_relative.to.VMA1.csv")
#mye0df<-mydf
mydf$Evolution<-factor(mydf$Evolution, levels=c("Standard-evolved","DR-evolved"))
mydf$Assay<-factor(mydf$Assay, levels=c("Assayed on standard","Assayed on DR"))
mydf$History<-factor(mydf$History, levels=c("Focal","Alternate"))
mycols<-c("grey48","grey88")
#The following is a two factor plot grouped by assay, rather than by history
mygg<-ggplot(mydf, aes(x=Assay, y=W, ymin=(W-1*W_SE), ymax=(W+1*W_SE),fill = Evolution)) +#!!!!!!!!!!!!!!!!!!!!!
geom_bar(position=position_dodge(), stat = "identity", colour="black", width = 0.5) +
geom_errorbar(aes(ymin=W - W_SE, ymax = W + W_SE), width = .15, size = 1.5, position = position_dodge(0.5)) +
scale_fill_manual(values=mycols) +
scale_y_continuous(limits = c(0,3.075), expand = c(0,0)) +
labs(x="Assay",y="Relative reproductive fitness (W')") +#!!!!!!!!!!!!!!!!!!!!!!!! (± 1 SE)
geom_hline(yintercept = 1, linetype=117, size = 1.25) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.key=element_blank(),axis.text=element_text(size=34),axis.title.x=element_text(size=36, colour = "black"), axis.title.y=element_text(size=36, colour = "black") , legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank(), axis.ticks.length = unit(0.2, "cm"))
plot(mygg)
#The following is a two factor plot grouped by assay, rather than by history
mygg<-ggplot(mydf, aes(x=Assay, y=W, ymin=(W-1*W_SE), ymax=(W+1*W_SE),fill = Evolution)) +#!!!!!!!!!!!!!!!!!!!!!
geom_bar(position=position_dodge(), stat = "identity", colour="black", width = 0.5) +
geom_errorbar(aes(ymin=W - W_SE, ymax = W + W_SE), width = .15, size = 1.5, position = position_dodge(0.5)) +
scale_fill_manual(values=mycols) +
scale_y_continuous(limits = c(0,2.075), expand = c(0,0)) +
labs(x="Assay",y="Relative reproductive fitness (W')") +#!!!!!!!!!!!!!!!!!!!!!!!! (± 1 SE)
geom_hline(yintercept = 1, linetype=117, size = 1.25) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black"), legend.key=element_blank(),axis.text=element_text(size=34),axis.title.x=element_text(size=36, colour = "black"), axis.title.y=element_text(size=36, colour = "black") , legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank(), axis.ticks.length = unit(0.2, "cm"))
plot(mygg)
rm(list = ls())
library(ggplot2);library(tidyverse)
mydf<-read_csv("C:\\Users\\rmoge\\Box Sync\\JTL_Lab\\Lab.Notebook\\20170903_DR_Evolution\\data\\mean.SE_275.csv")
#mydf<-read_csv("C:\\Users\\rmoge\\Box Sync\\JTL_Lab\\Lab.Notebook\\20170903_DR_Evolution\\data\\mean.SE_275_relative.to.VMA1.csv")
#mye0df<-mydf
mydf$Evolution<-factor(mydf$Evolution, levels=c("Standard-evolved","DR-evolved"))
mydf$Assay<-factor(mydf$Assay, levels=c("Assayed on standard","Assayed on DR"))
mydf$History<-factor(mydf$History, levels=c("Focal","Alternate"))
mycols<-c("grey48","grey88")
#Note that if you want to make different plots that have different groupings, you should make multiple dataframes, each one having the appropriate "levels" assignment.
mye0df$Evolution<-factor(mydf$Evolution, levels=c("Standard-evolved","DR-evolved"))
mye0df$Assay<-factor(mydf$Assay, levels=c("Assayed on standard","Assayed on DR"))
rm(list = ls())
library(ggplot2);library(tidyverse)
mydf<-read_csv("C:\\Users\\rmoge\\Box Sync\\JTL_Lab\\Lab.Notebook\\20170903_DR_Evolution\\data\\mean.SE_275.csv")
#mydf<-read_csv("C:\\Users\\rmoge\\Box Sync\\JTL_Lab\\Lab.Notebook\\20170903_DR_Evolution\\data\\mean.SE_275_relative.to.VMA1.csv")
#mye0df<-mydf
mydf$Evolution<-factor(mydf$Evolution, levels=c("Standard-evolved","DR-evolved"))
mydf$Assay<-factor(mydf$Assay, levels=c("Assayed on standard","Assayed on DR"))
mydf$History<-factor(mydf$History, levels=c("Focal","Alternate"))
mycols<-c("grey48","grey88")
mycols<-c("grey48","white")
LDR<-mydf[1:2,]
Lstd<-mydf[3:4,]
myDRe0<-ggplot(LDR, aes(x=Assay, y=e0, ymin=(e0-1*e0_SE), ymax=(e0+1*e0_SE),fill = Evolution)) +
geom_bar(position=position_dodge(), stat = "identity", colour="black", width = 0.5) +
geom_errorbar(aes(ymin=e0 - e0_SE, ymax = e0 + e0_SE), width = 0.15, size = 1.5, position = position_dodge(0.5)) +
geom_hline(yintercept = 9.745583769, linetype=117, size = 1.25) +
scale_fill_manual(values=mycols) +
scale_color_manual(values = c('black','darkgray')) +
scale_y_continuous(breaks = c(0,2,4,6,8,10,12), limits=c(0,12.4), expand = c(0,0)) +
labs(x="Assayed on DR",y="Life expectancy (days)") +#!!!!!!!!!!!!!!!!!!!!!!!! ± 1 SE
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),axis.text.y=element_text(size=34), axis.text.x=element_text(size=0),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank()) +
coord_fixed(2/16)
plot(myDRe0)
mystde0<-ggplot(Lstd, aes(x=Assay, y=e0, ymin=(e0-1*e0_SE), ymax=(e0+1*e0_SE),fill = Evolution)) +
geom_bar(position=position_dodge(), stat = "identity", colour="black", width = 0.5) +
geom_errorbar(aes(ymin=e0 - e0_SE, ymax = e0 + e0_SE), width = 0.15, size = 1.5, position = position_dodge(0.5)) +
geom_hline(yintercept = 6.273592001, linetype=117, size = 1.25) +
scale_fill_manual(values=mycols) +
scale_color_manual(values = c('black','darkgray')) +
scale_y_continuous(breaks = c(0,2,4,6,8,10,12), limits=c(0,12.4), expand = c(0,0)) +
labs(x="Assayed on standard",y="Life expectancy (days)") +#!!!!!!!!!!!!!!!!!!!!!!!! ± 1 SE
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),axis.text.y=element_text(size=34), axis.text.x=element_text(size=0),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank()) +
coord_fixed(2/16)
plot(mystde0)
LDR<-mydf[1:2,]
Lstd<-mydf[3:4,]
myDRe0<-ggplot(LDR, aes(x=Assay, y=e0, ymin=(e0-1*e0_SE), ymax=(e0+1*e0_SE),fill = Evolution)) +
geom_bar(position=position_dodge(), stat = "identity", colour="black", width = 0.5) +
geom_errorbar(aes(ymin=e0 - e0_SE, ymax = e0 + e0_SE), width = 0.15, size = 1.5, position = position_dodge(0.5)) +
geom_hline(yintercept = 9.745583769, linetype=117, size = 1.25) +
scale_fill_manual(values=mycols) +
scale_color_manual(values = c('black','darkgray')) +
scale_y_continuous(breaks = c(0,2,4,6,8,10,12), limits=c(0,12.4), expand = c(0,0)) +
labs(x="Assayed on DR",y="") +#!!!!!!!!!!!!!!!!!!!!!!!! ± 1 SE
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(legend.key=element_blank(),axis.text.y=element_text(size=34), axis.text.x=element_text(size=0),axis.title=element_text(size=36),legend.text=element_text(size=22),legend.title = element_text(size=34), axis.line.x = element_line(color="black", size = 1.5), axis.line.y = element_line(color="black", size = 1.5), axis.ticks.y = element_line(color = "black", size = 1.5), axis.ticks.x = element_blank()) +
coord_fixed(2/16)
plot(myDRe0)
################################################################################
#                                                                              #
#	Lennon Lab Growth Curve Analysis (with Synergy MX Plate Reader)              #
#   Parameter Estimate Code                                                    #
#                                                                              #
################################################################################
#                                                                              #
#	Written by: M. Muscarella                                                    #
#   Partially based on growthcurve_code.R Written by: M. Larsen (2013/07/18)   #
#                                                                              #
#	Last update: 02/27/2016 by V. Kuo and M. Muscarella                          #
#                                                                              #
################################################################################
growth.modGomp <- function(input=" ", output.name=" ",
output.dir="../output/",
temp.dir="../temp/",
intercept.guess=0.1,delta = 0.05,
synergy=T, temp = T, smooth = T, skip = ""){
# Input = Raw txt output file from Synergy MX
# Intercept.guess = initial guess of non-grid parameter for y intercept
# delta = minimum change in OD required for analysis
# synergy=T --> the data comes from the synergy mx machine.
#   If false data should be deliminated in proper format
# temp = T -> is there temperature data include for QC purposes
# Load Code Dependencies
source("../bin/read.synergy.R")
source("../bin/curve_fit_fxs.R")
source("../bin/grid.mle2.R")
# Create Directory For Output and Temp
dir.create(output.dir, showWarnings = FALSE)
dir.create(temp.dir, showWarnings = FALSE)
# Data Input
if (synergy == T){
data.in <- read.synergy(input, skip = skip)
samples <- colnames(data.in[3:dim(data.in)[2]])
} else {
data.in <- read.csv(input, header=T)
samples <- colnames(data.in[2:dim(data.in)[2]])
}
if (temp == T){
temp.test <- lm(round(Temp, 2) ~ Time, data=data.in)
p <- round(anova(temp.test)$'Pr(>F)'[1], 3)
temp.min <- min(data.in$Temp)
temp.max <- max(data.in$Temp)
temp.diff <- temp.max - temp.min
if (temp.diff < 3) {} else {stop("Stop, check for temperature effects")}
} else {}
# Initialize Data Storage
results <- matrix(NA,nrow=length(samples),ncol=10)
colnames(results) <- c("Curve","b0","A","umax","L","z",
"umax.lw","umax.up","umax.lw.FI","umax.up.FI")
results <- as.data.frame(results)
# Temporary Directory
# outfile <- paste(temp.dir,output,".txt", sep="")
# Creat Output Directory
outfile <- paste(output.dir,output.name,".txt", sep="")
titles <- c("Curve","b0","A","umax","L","z", "umax.lw","umax.up",
"umax.lw.FI","umax.up.FI")
write.table(as.matrix(t(titles)), file=outfile, append=F, row.names=F,
col.names=F, sep=",", quote=FALSE)
for(i in 1:length(samples)){
# Print Operation Status
print(paste("Starting sample ", samples[i], sep = ""), quote=F)
# Extract Data
t <- data.in$Time
s <- data.in[,which(colnames(data.in) == samples[i])]
if (max(s) - min(s) < delta) {
plot(s ~ t, main=samples[i], ylab="ABS", xlab="Time", pch=19)
print(paste("Observed change in OD is not greater than ", delta,
" in sample ", samples[i], sep=""), quote=F)
next
} else {
realdata <- data.frame(t,s)
}
# Smoothing Function
if (smooth == T){
s.2 <- as.numeric(filter(s, rep(1/11,11), circular=F, sides=2))
s.2[1:5] <- s[1:5]
s.2[(length(s.2)-5):length(s.2)] <- s[(length(s)-5):length(s)]
s.max <- max(which(s.2 == max(s.2, na.rm=T)))
t.end <- round(t[s.max],0) + 1
t.trim <- t[which(t <= t.end)]
s.trim <- s.2[which(t <= t.end)]
tmpdata <- data.frame(t.trim, s.trim)
} else {
s.2 <- as.numeric(s)
s.2[1:5] <- s[1:5]
s.2[(length(s.2)-5):length(s.2)] <- s[(length(s)-5):length(s)]
s.max <- max(which(s.2 == max(s.2, na.rm=T)))
t.end <- round(t[s.max],0) + 1
t.trim <- t[which(t <= t.end)]
s.trim <- s.2[which(t <= t.end)]
tmpdata <- data.frame(t.trim, s.trim)
}
# Set Grid and Start Lists for Model
# Modified Gompertz, dat~dnorm(mean=m.gomp(time2,c(b0,A,umax,L)),sd=exp(z))
grids1<-list(A=c(1.04, 2.4, 1.72),umax=c(0.005,0.006,0.008),L=c(-5,-0.5,0.1,5,10,20),z=c(-2,-0.5))
start1<-list(b0=intercept.guess,A=max(tmpdata[,2]),umax=NA,L=NA,z=NA)
# Perform grid.mle2 Fits
fit1<-grid.mle2(minuslogl=s.trim~dnorm(mean=m.gomp(t.trim,c(b0,A,umax,L)),
sd=exp(z)),grids=grids1,start=start1,data=tmpdata,
method="BFGS")
print("finished fit", quote=F)
# isolate best of each class of model
best.f1<-fit1$res.mod[[which(fit1$res.mat[,'AIC']==min(fit1$res.mat[,'AIC']))[1]]]
# generate plot of model fits
plot(s ~ t, main=samples[i], ylab="ABS", xlab="Time", pch=19, data=realdata)
curve(m.gomp(x,coef(best.f1)[1:4]),0,max(realdata$t),col='blue',lwd=2,add=T)
pdf(file=paste(temp.dir,"testplot",samples[i],".pdf",sep=""))
par(mar = c(6, 6, 4, 2))
plot(s ~ t, main=samples[i],
ylab=expression(paste("Absorbance"[600])),
xlab=expression(paste("Time (min)")),
pch=19, las = 1, cex.axis = 1, cex.lab = 1.5, data=realdata)
curve(m.gomp(x,coef(best.f1)[1:4]),0,max(tmpdata$t.trim),col='blue',lwd=2,add=T)
dev.off()
# attempt profiling
pf1<-profile(best.f1)
print("finished pf1", quote=F)
if(class(pf1)=="profile.mle2"){
ci1<-confint(pf1)['umax',]
} else {
ci1<-c(NA,NA)
names(ci1)<-c("2.5%","97.5%")
}
ciFI1<-confint.FI(best.f1)['umax',]
# Save coefficients of model
cfs<-coef(best.f1)
results$Curve[i] <- samples[i]
results$b0[i]<-round(cfs['b0'], 4)
results$A[i]<-round(cfs['A'], 4)
results$umax[i]<-round(cfs['umax'], 4)
results$L[i]<-round(cfs['L'], 4)
results$z[i]<-round(cfs['z'], 4)
results[i,c("umax.lw" , "umax.up" , "umax.lw.FI" , "umax.up.FI")] <- round(c(ci1,ciFI1), 4)
write.table(results[i,], file=outfile, append=T, row.names=F, col.names=F, sep=",", quote=FALSE)
# Print Operation Status
print(paste("umax for ", samples[i], " = ", results$umax[i], sep = ""), quote = F)
print(paste(round(((i)/(length(samples))*100),0),"% complete",
sep = ""), quote=F)
}
# results1<-results
# write.csv(results,"results.csv")
}
setwd("C:\\Users\\rmoge\\GitHub\\Growth_Curves")
growth.modGomp(input = "C:\\Users\\rmoge\\GitHub\\Growth_Curves\\data\\20190814_LBv2_M9_clean_rawOD.csv", output.name = "20190814_LBv2_M9.for.Vn", ooutput.dir = "../20190814_LBv2_M9.for.Vn/", temp.dir = "../20190814_LBv2_M9/", synergy = F, temp = F)
growth.modGomp(input = "C:\\Users\\rmoge\\GitHub\\Growth_Curves\\data\\20190814_LBv2_M9_clean_rawOD.csv", output.name = "20190814_LBv2_M9.for.Vn", output.dir = "../20190814_LBv2_M9.for.Vn/", temp.dir = "../20190814_LBv2_M9/", synergy = F, temp = F)
growth.modGomp(input = "C:\\Users\\rmoge\\GitHub\\Growth_Curves\\data\\20190814_LBv2_M9_clean_rawOD.csv", output.name = "20190814_LBv2_M9.for.Vn", output.dir = "../20190814_LBv2_M9.for.Vn/", temp.dir = "../20190814_LBv2_M9/", synergy = F, temp = F)
setwd("C:\\Users\\rmoge\\GitHub\\Growth_Curves\\bin")
growth.modGomp(input = "C:\\Users\\rmoge\\GitHub\\Growth_Curves\\data\\20190814_LBv2_M9_clean_rawOD.csv", output.name = "20190814_LBv2_M9.for.Vn", output.dir = "../20190814_LBv2_M9.for.Vn/", temp.dir = "../20190814_LBv2_M9/", synergy = F, temp = F)
